{"version":3,"sources":["components/App/App.styles.jsx","components/PlayButton/PlayButton.styles.jsx","components/TimedInput/TimedInput.styles.jsx","utils.js","components/Stopwatch/Stopwatch.jsx","components/TimedInput/TimedInput.jsx","components/NotesList/NotesList.styles.jsx","components/NoteView/NoteView.styles.jsx","components/TinyButton/TinyButton.styles.jsx","components/TinyButton/TinyButton.jsx","components/NoteView/NoteView.jsx","components/NoteEdit/NoteEdit.styles.jsx","components/NoteEdit/NoteEdit.jsx","components/NotesList/NotesList.jsx","components/App/App.jsx","index.js"],"names":["StyledApp","styled","div","Button","button","props","isSquare","css","StyledTimedInput","form","Span","span","Input","input","PlayButtonContainer","StyledPlayButton","msToTime","v","withMs","c","n","z","String","length","slice","ms","secs","mins","hrs","Stopwatch","isRunning","useState","timePassed","setTimePassed","digitsEl","useRef","useEffect","timer","setInterval","clearInterval","ref","TimedInput","handleInput","titleText","setTitleText","isInCountMode","setIsInCountMode","startTime","setStartTime","handleSubmit","ev","preventDefault","title","timings","start","end","Number","Date","now","onSubmit","placeholder","maxLength","type","value","disabled","onChange","target","onClick","StyledNotesList","StyledNoteView","Section","section","BoldSpan","TextSpan","EditButtons","StyledTinyButton","flavor","TinyButton","children","NoteView","data","handleEdit","handleDelete","text","toLocaleString","StyledNoteEdit","Textarea","textarea","NoteEdit","handleTextUpdate","editedText","setEditedText","NotesList","list","removeNote","updateNoteText","inEditModeMap","setInEditModeMap","map","noteObj","i","id","txt","index","newText","Object","assign","turnOnNoteEditMode","App","JSON","parse","localStorage","getItem","notesArr","setNotesArr","newArr","newNote","nanoid","unshift","setItem","stringify","confirm","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb028ede.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledApp = styled.div`\r\n  width: 320px;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const Button = styled.button`\r\n  width: 36px;\r\n  height: 36px;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  transition: 200ms all linear;\r\n  border-style: solid;\r\n  border-width: 18px 0 18px 36px;\r\n  border-color:  transparent transparent transparent #95ff0b;\r\n  &:hover {\r\n    border-color: transparent transparent transparent #62ff08; \r\n  }\r\n\r\n  ${props => props.isSquare && css`\r\n    border-width: 0px 0 0px 36px;\r\n    border-color: rgb(255, 2, 68);\r\n    &:hover {\r\n      border-color: rgb(255, 2, 2);\r\n    }\r\n  `}\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { Button } from '../PlayButton/PlayButton.styles';\r\n\r\nexport const StyledTimedInput = styled.form`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  flex-basis: 100%;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  font-size: 17px;\r\n  line-height: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  flex-basis: 85%;\r\n  padding: 0 0 0 10px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const PlayButtonContainer = styled.div`\r\n  flex-basis: 15%;\r\n`;\r\n\r\nexport const StyledPlayButton = styled(Button)`\r\n  display: block;\r\n  margin-left: auto;\r\n`;\r\n","export const msToTime = (v = 0, { withMs } = {}) => {\r\n  // ceil to Z amount of digits\r\n  const c = (n, z = 2) => String(n).length < z ? ('00' + n).slice(-z) : n;\r\n\r\n  const ms = v % 1000;\r\n  v = (v - ms) / 1000;\r\n\r\n  const secs = v % 60;\r\n  v = (v - secs) / 60;\r\n\r\n  const mins = v % 60;\r\n  const hrs = (v - mins) / 60;\r\n\r\n  if (withMs) {\r\n    return `${c(hrs)}:${c(mins)}:${c(secs)}.${c(ms, 3)}`;\r\n  } else {\r\n    return `${c(hrs)}:${c(mins)}:${c(secs)}`;\r\n  }  \r\n};\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\nimport { msToTime } from '../../utils';\r\n\r\nexport default function Stopwatch({ isRunning }) {\r\n  const [timePassed, setTimePassed] = useState(0);\r\n  const digitsEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isRunning !== true) return setTimePassed(0);\r\n\r\n    const timer = setInterval(() => {\r\n      setTimePassed(timePassed + 1000);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timePassed]);\r\n\r\n  return (\r\n    <span ref={digitsEl}>{msToTime(timePassed)}</span>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport {\r\n  StyledTimedInput, Span, Input,\r\n  PlayButtonContainer, StyledPlayButton\r\n} from './TimedInput.styles';\r\n\r\nimport Stopwatch from '../Stopwatch/Stopwatch';\r\n\r\nexport default function TimedInput({ handleInput }) {\r\n  const [titleText, setTitleText] = useState('');\r\n  const [isInCountMode, setIsInCountMode] = useState(false);\r\n  const [startTime, setStartTime] = useState(null);\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (isInCountMode) {\r\n      setTitleText('');\r\n      handleInput({\r\n        title: titleText || 'Без имени',\r\n        timings: {\r\n          start: startTime,\r\n          end: Number(new Date())\r\n        }\r\n      });\r\n    } else {\r\n      setStartTime(Date.now());\r\n    }\r\n\r\n    setIsInCountMode(!isInCountMode);\r\n  };\r\n\r\n  return (\r\n    <StyledTimedInput onSubmit={handleSubmit}>\r\n      <div>{isInCountMode ? 'ಠ⁠_⁠ಠ' : '(⁠ ⁠´⁠ ⁠ｰ⁠ ⁠`⁠)'}</div>\r\n      <Span>\r\n        {isInCountMode ? <Stopwatch isRunning/> : <Stopwatch/>}\r\n      </Span>\r\n      <Input\r\n        placeholder=\"Чем ты будешь заниматься сейчас?\"\r\n        maxLength=\"30\"\r\n        type=\"text\"\r\n        value={titleText}\r\n        disabled={isInCountMode}\r\n        onChange={(ev) => setTitleText(ev.target.value)}\r\n      />\r\n      <PlayButtonContainer>\r\n        <StyledPlayButton\r\n          isSquare={isInCountMode}\r\n          onClick={handleSubmit}\r\n        ></StyledPlayButton>\r\n      </PlayButtonContainer>\r\n    </StyledTimedInput>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNotesList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNoteView = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-basis: 100%;\r\n  border: 1px solid black;\r\n  margin-bottom: 20px;\r\n  padding: 4px 0;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  flex-basis: 66%;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  margin: 9px;\r\n`;\r\n\r\nexport const BoldSpan = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const TextSpan = styled(Span)`\r\n  overflow-wrap: anywhere;\r\n`;\r\n\r\nexport const EditButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-basis: 25%;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTinyButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 0px;\r\n  line-height: 13px;\r\n  cursor: pointer;\r\n  border: 1px solid black;\r\n  background-color: ${({ flavor }) => {\r\n    return (\r\n      flavor === 'green' ? '#44ff33' :\r\n      flavor === 'yellow' ? '#fffc33' :\r\n      flavor === 'red' ? '#ffa6a6' :\r\n      '#efefef'\r\n    );\r\n  }};\r\n`;\r\n","import { StyledTinyButton } from './TinyButton.styles';\r\n\r\nexport default function TinyButton({ flavor, children, onClick }) {\r\n  return (\r\n    <StyledTinyButton\r\n      flavor={flavor}\r\n      onClick={onClick}\r\n    >{children}</StyledTinyButton>\r\n  );\r\n}\r\n","import { msToTime } from '../../utils';\r\n\r\nimport {\r\n  StyledNoteView, Section, EditButtons,\r\n  Span, BoldSpan, TextSpan\r\n} from './NoteView.styles';\r\n\r\nimport TinyButton from '../TinyButton/TinyButton';\r\n\r\n// data: { id, title, text, timings }\r\nexport default function NoteView({\r\n  data, handleEdit, handleDelete\r\n}) {\r\n  return (\r\n    <StyledNoteView>\r\n      <Section>\r\n        <Span>\r\n          <BoldSpan title=\"Потрачено времени\">\r\n            {`⏲ ${msToTime(data.timings.end - data.timings.start)}`}\r\n          </BoldSpan>\r\n          {` – ${data.title}`}\r\n        </Span>\r\n        <TextSpan title=\"Заметки\">{`📝 ${data.text}`}</TextSpan>\r\n        <Span title=\"Дата завершения\">\r\n          {`⏰ ${new Date(data.timings.end).toLocaleString()}`}\r\n        </Span>\r\n      </Section>\r\n      <EditButtons>\r\n        <TinyButton onClick={handleEdit} flavor=\"yellow\">✏️</TinyButton>\r\n        <TinyButton onClick={handleDelete} flavor=\"red\">❌</TinyButton>\r\n      </EditButtons>\r\n    </StyledNoteView>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNoteEdit = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-basis: 100%;\r\n  border: 1px solid black;\r\n  margin-bottom: 20px;\r\n  padding: 4px 0;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  flex-basis: 66%;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  display: block;\r\n  margin: 9px;\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n  width: 192px;\r\n  height: 60px;\r\n  padding: 5px 5px 5px 7px;\r\n  resize: none;\r\n`;\r\n\r\nexport const EditButtons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-basis: 25%;\r\n`;\r\n","import { useState } from 'react';\r\n\r\nimport {\r\n  StyledNoteEdit, Span, Textarea, Section, EditButtons\r\n} from './NoteEdit.styles';\r\n\r\nimport TinyButton from '../TinyButton/TinyButton';\r\n\r\n// data: { id, title, text, timings }\r\nexport default function NoteEdit({\r\n  data, handleTextUpdate, handleDelete\r\n}) {\r\n  const [editedText, setEditedText] = useState(data.text);\r\n\r\n  return (\r\n    <StyledNoteEdit>\r\n      <Section>\r\n        <Span>{`⏲ ${data.title}`}</Span>\r\n        <Textarea\r\n          value={editedText}\r\n          placeholder='И на что было потрачено это время?'\r\n          onChange={(ev) => setEditedText(ev.target.value)}\r\n        ></Textarea>\r\n      </Section>\r\n      <EditButtons>\r\n        <TinyButton\r\n          onClick={() => handleTextUpdate(editedText)}\r\n          flavor=\"green\"\r\n        >✔️</TinyButton>\r\n        <TinyButton\r\n          onClick={handleDelete}\r\n          flavor=\"red\"\r\n        >❌</TinyButton>\r\n      </EditButtons>\r\n    </StyledNoteEdit>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport { StyledNotesList } from './NotesList.styles';\r\n\r\nimport NoteView from '../NoteView/NoteView';\r\nimport NoteEdit from '../NoteEdit/NoteEdit';\r\n\r\nexport default function NotesList({ list, removeNote, updateNoteText }) {\r\n  const [inEditModeMap, setInEditModeMap] = useState({});\r\n\r\n  const turnOnNoteEditMode = (index) => {\r\n    const noteObj = list[index];\r\n\r\n    setInEditModeMap(\r\n      Object.assign({ [noteObj.id]: true }, inEditModeMap)\r\n    );\r\n  };\r\n\r\n  const handleTextUpdate = (index, newText) => {\r\n    const noteObj = list[index];\r\n\r\n    delete inEditModeMap[noteObj.id];\r\n    setInEditModeMap(Object.assign({}, inEditModeMap));\r\n\r\n    updateNoteText(index, newText);\r\n  };\r\n\r\n  return (\r\n    <StyledNotesList>\r\n      {\r\n        list.map((noteObj, i) => {\r\n          if (inEditModeMap[noteObj.id] === true) {\r\n            return <NoteEdit\r\n              key={noteObj.id}\r\n              data={noteObj}\r\n              handleTextUpdate={(txt) => handleTextUpdate(i, txt)}\r\n              handleDelete={() => removeNote(i)}\r\n            />\r\n          } else {\r\n            return <NoteView\r\n              key={noteObj.id}\r\n              data={noteObj}\r\n              handleEdit={() => turnOnNoteEditMode(i)}\r\n              handleDelete={() => removeNote(i)}\r\n            />\r\n          }\r\n        })\r\n      }\r\n    </StyledNotesList>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport { StyledApp } from './App.styles';\r\n\r\nimport TimedInput from '../TimedInput/TimedInput';\r\nimport NotesList from '../NotesList/NotesList';\r\n\r\nexport default function App() {\r\n  const [notesArr, setNotesArr] = useState(\r\n    JSON.parse(localStorage.getItem('notesList')) || []\r\n  );\r\n\r\n  const addNote = ({ title, timings }) => {\r\n    const newArr = notesArr.slice();\r\n    const newNote = {\r\n      id: nanoid(), title, text: '', timings\r\n    };\r\n\r\n    newArr.unshift(newNote);\r\n\r\n    localStorage.setItem('notesList', JSON.stringify(newArr));\r\n    setNotesArr(newArr);\r\n  };\r\n\r\n  const removeNote = (index) => {\r\n    if (!confirm('Это безвозвратно удалит записку')) return;\r\n\r\n    const newArr = notesArr.slice();\r\n\r\n    newArr.splice(index, 1);\r\n\r\n    localStorage.setItem('notesList', JSON.stringify(newArr));\r\n    setNotesArr(newArr);\r\n  };\r\n\r\n  const updateNoteText = (index, newText) => {\r\n    const newArr = notesArr.slice();\r\n    const noteObj = newArr[index];\r\n\r\n    noteObj.text = newText;\r\n\r\n    localStorage.setItem('notesList', JSON.stringify(newArr));\r\n    setNotesArr(newArr);\r\n  };\r\n\r\n  return (\r\n    <StyledApp>\r\n      <TimedInput handleInput={addNote}/>\r\n      <NotesList\r\n        list={notesArr}\r\n        removeNote={removeNote}\r\n        updateNoteText={updateNoteText}\r\n      />\r\n    </StyledApp>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App.jsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}